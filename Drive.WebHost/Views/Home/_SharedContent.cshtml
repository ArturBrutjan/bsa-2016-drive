@using Drive.DataAccess.Entities;
@using Driver.Shared.Dto;

@model ShareLinkDto
@ViewBag

<div class="container-fluid" style="margin-top:10%">
    <div class="row">
        <div class="col-xs-8 col-xs-offset-2" style="background-color:white; padding:0">
            <div class="filter-table-row">
                @Ajax.ActionLink("Shared", "Share", new { id = Model.Link },
                               new AjaxOptions { UpdateTargetId = "content" })
                @if (Model.Path != null && Model.Path.Count() > 0)
                {
                    foreach (var item in Model.Path)
                    {
                        @:&nbsp;>&nbsp; @Ajax.ActionLink(@item.Name, "GetFolderContent", new { link = Model.Link, id = @item.Id },
                                            new AjaxOptions { UpdateTargetId = "content" })
                    }
                }
            </div>
                <div class="filter-table-internal" style="cursor:pointer;">
                    <div style="transition: all 2s" id="folders">
                        <div class="filter-table-row">
                            @foreach (var folder in Model.Folders)
                            {
                                <div class="col-xs-4 middle-div" title="@folder.Name">
                                    <img src="~/Content/Icons/folder.svg" height="30" />
                                    @Ajax.ActionLink(@folder.Name, "GetFolderContent", new { link = Model.Link, id = @folder.Id },
                               new AjaxOptions
                               {
                                   UpdateTargetId = "content"
                               })

                                </div>
                                <div class="col-xs-5 middle-div" title="@folder.Description">
                                    @folder.Description
                                </div>
                                    <div class="col-xs-3 middle-div">Folder</div>
                            }
                        </div>
                    </div>
                    <div style="transition: all 2s" id="files">
                        <div class="filter-table-row">
                            @foreach (var file in Model.Files)
                            {

                                <div class="col-xs-4 middle-div" title="@file.Name">
                                    <img src="@ChooseIcon(@file.FileType)" height="30" />
                                    @if (@file.FileType != FileType.Uploaded)
                                    {
                                        if (@file.Name.Length > 40)
                                        {
                                            <a href="@file.Link" target="_blank"> @file.Name... </a>
                                        }
                                        else
                                        {
                                            <a href="@file.Link" target="_blank"> @file.Name </a>
                                        }
                                    }
                                    else
                                    {
                                        @Html.ActionLink(@file.Name, "Download", new { fileLink = @file.Link })
                                    }
                                </div>
                                <div class="col-xs-5 middle-div" title="@file.Description">
                                    @file.Description
                                </div>
                                    <div class="col-xs-3 middle-div"> @file.FileType </div>
                            }
                        </div>
                    </div>
                    <div style="transition: all 2s" id="folders">
                        <div class="filter-table-row">
                            @foreach (var image in Model.Images)
                            {
                                <div class="col-xs-4 middle-div" title="@image.Name">
                                    <img src="~/Content/Icons/image.svg" height="30" />
                                    @if (@image.Prev_Link.Length > 0)
                                    {
                                        @Html.ActionLink(@image.Name, "Download", new { fileLink = @image.Link })
                                    }
                                    else
                                    {
                                        if (@image.Name.Length > 40)
                                        {
                                            <a href="@image.Link" target="_blank"> @image.Name... </a>
                                        }
                                        else
                                        {
                                            <a href="@image.Link" target="_blank"> @image.Name </a>
                                        }
                                    }
                                </div>
                                <div class="col-xs-5 middle-div" title="@image.Description">
                                    @image.Description
                                </div>
                                    <div class="col-xs-3 middle-div">@image.FileType</div>
                            }
                        </div>
                    </div>
                </div>
            </div>
    </div>
</div>



@helper ChooseIcon(FileType type)
{
string iconSrc = "/Content/Icons/";
switch (type)
{
    case FileType.Document:
        iconSrc += "doc.svg";
        break;
    case FileType.Sheets:
        iconSrc += "xls.svg";
        break;
    case FileType.Slides:
        iconSrc += "ppt.svg";
        break;
    case FileType.Trello:
        iconSrc += "trello.svg";
        break;
    case FileType.Links:
        iconSrc += "link.svg";
        break;
    case FileType.Uploaded:
        iconSrc += "physical-file.svg";
        break;
    case FileType.AcademyPro:
        iconSrc += "academyPro.svg";
        break;
    case FileType.Images:
        iconSrc += "image.svg";
        break;
    case FileType.Events:
        iconSrc += "event.svg";
        break;
    case FileType.Videos:
        iconSrc += "video.svg";
        break;
}
    @iconSrc;
}

