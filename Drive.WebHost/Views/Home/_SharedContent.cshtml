@using Drive.DataAccess.Entities;
@using Driver.Shared.Dto;
@using System.Text.RegularExpressions;

@model ShareLinkDto

<div class="container-fluid" style="">
    <div class="row">
        <div class="col-xs-12" style="background-color:white; padding:0">

            @{var path = GetPath().ToString(); }

            <div id="link-shared-nav">
                @Ajax.ActionLink("Shared", "Share", "Home", "http",
                                            path, null, new { id = Model.Link },
                               new AjaxOptions { UpdateTargetId = "content" }, null)
                @if (Model.Path != null && Model.Path.Count() > 0)
                {
                    foreach (var item in Model.Path)
                    {
                        @:&nbsp;>&nbsp; @Ajax.ActionLink(@item.Name, "GetFolderContent", "Home", "http",
                                            path, null, new { link = Model.Link, id = @item.Id },
                                            new AjaxOptions { UpdateTargetId = "content" }, null)
                    }
                }
            </div>
            <div class="filter-table-internal" style="cursor:pointer;">
                <div style="transition: all 2s" id="folders">

                    @foreach (var folder in Model.Folders)
                    {
                        <div class="row filter-table-row">
                            <div class="col-xs-4 middle-div" title="@folder.Name">
                                <img src="@ViewBag.BasePath/Content/Icons/folder.svg" height="30" />
                                @Ajax.ActionLink(@folder.Name.Length > 30 ?
                            string.Format("{0}{1}", @folder.Name.Substring(0, 30), "...") : @folder.Name, "GetFolderContent", "Home", "http",
                            path, null, new { link = Model.Link, id = @folder.Id },
                            new AjaxOptions
                            {
                                UpdateTargetId = "content"
                            }, null)

                            </div>
                            <div class="col-xs-5 middle-div" title="@folder.Description">
                                @if (@folder.Description.Length > 50)
                                {
                                    @(string.Format("{0}{1}", folder.Description.Substring(0, 50), "..."))
                                }
                                else
                                {
                                    @folder.Description
                                }
                            </div>
                            <div class="col-xs-3 middle-div">Folder</div>
                        </div>
                    }
                </div>
                <div style="transition: all 2s" id="files">
                    @foreach (var file in Model.Files)
                    {
                        <div class="row filter-table-row">

                            <div class="col-xs-4 middle-div" title="@file.Name">
                                <img src="@ChooseIcon(@file.FileType)" height="30" />
                                @{
                                    switch (@file.FileType)
                                    {
                                        case FileType.Uploaded:
                                            @Html.ActionLink(@file.Name.Length > 30 ?
                                                        string.Format("{0}{1}", @file.Name.Substring(0, 30), "...") : @file.Name, "Download", "Home","http", path, null, new
                                                        { fileLink = @file.Link }, null)
                                            break;
                                        case FileType.Events:
                                            @Html.ActionLink(@file.Name.Length > 30 ?
                                                        string.Format("{0}{1}", @file.Name.Substring(0, 30), "...") : @file.Name, "FindEventByFileId", "Home", "http", path, null, new
                                                        { fileId = @file.Id }, null)
                                            break;
                                        case FileType.AcademyPro:
                                            @Html.ActionLink(@file.Name.Length > 30 ?
                                                        string.Format("{0}{1}", @file.Name.Substring(0, 30), "...") : @file.Name, "FindCourseByFileId", "Home", "http", path, null, new
                                                        { fileId = @file.Id }, null)
                                            break;
                                        default:
                                            if (@file.Name.Length > 30)
                                            {
                                                <a href="@file.Link" target="_blank"> @file.Name.Substring(0, 30)... </a>
                                            }
                                            else
                                            {
                                                <a href="@file.Link" target="_blank"> @file.Name </a>
                                            }
                                            break;
                                    }
                                }
                            </div>
                            @if (@file.Description != null)
                            {
                                <div class="col-xs-5 middle-div" title="@file.Description">
                                    @if (@file.Description.Length > 50)
                                    {
                                        @(string.Format("{0}{1}", file.Description.Substring(0, 50), "..."))
                                    }
                                    else
                                    {
                                        @file.Description
                                    }
                                </div>
                            }
                            else { <div class="col-xs-5 middle-div"></div> }

                            <div class="col-xs-3 middle-div"> @file.FileType </div>
                        </div>
                                    }
                </div>
                <div style="transition: all 2s" id="images">
                    @foreach (var image in Model.Images)
                    {
                        <div class="row filter-table-row">
                            <div class="col-xs-4 middle-div" title="@image.Name">
                                <img src="@ViewBag.BasePath/Content/Icons/image.svg" height="30" />
                                @if (@image.Prev_Link.Length > 0)
                                {
                                    @Html.ActionLink(@image.Name.Length > 30 ?
                                   string.Format("{0}{1}", @image.Name.Substring(0, 30), "...") : @image.Name, "Download","Home", "http", path, null, new { fileLink = @image.Link }, null)
                                }
                                else
                                {
                                    if (@image.Name.Length > 30)
                                    {
                                        <a href="@image.Link" target="_blank"> @image.Name... </a>
                                    }
                                    else
                                    {
                                        <a href="@image.Link" target="_blank"> @image.Name </a>
                                    }
                                }
                            </div>
                            @if (@image.Description != null)
                            {
                                <div class="col-xs-5 middle-div" title="@image.Description">
                                    @if (@image.Description.Length > 50)
                                    {
                                        @(string.Format("{0}{1}", image.Description.Substring(0, 50), "..."))
                                    }
                                    else
                                    {
                                        @image.Description
                                    }
                                </div>
                            }
                            else { <div class="col-xs-5 middle-div"></div> }

                            <div class="col-xs-3 middle-div">@image.FileType</div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>



    @helper ChooseIcon(FileType type)
    {
        string iconSrc = ViewBag.BasePath + "/Content/Icons/";
        switch (type)
        {
            case FileType.Document:
                iconSrc += "doc.svg";
                break;
            case FileType.Sheets:
                iconSrc += "xls.svg";
                break;
            case FileType.Slides:
                iconSrc += "ppt.svg";
                break;
            case FileType.Trello:
                iconSrc += "trello.svg";
                break;
            case FileType.Links:
                iconSrc += "link.svg";
                break;
            case FileType.Uploaded:
                iconSrc += "physical-file.svg";
                break;
            case FileType.AcademyPro:
                iconSrc += "academyPro.svg";
                break;
            case FileType.Images:
                iconSrc += "image.svg";
                break;
            case FileType.Events:
                iconSrc += "event.svg";
                break;
            case FileType.Videos:
                iconSrc += "video.svg";
                break;
        }
            @iconSrc;
}

@helper GetPath()
{
string path = ViewBag.BasePath;
path = path.Substring("http://".Length).Split(':')[0];
    @path
}

