swagger: '2.0'
info:
  description: API for Binary Drive project
  version: 1.0.0
  title: Binary Drive
host: 'drive-bsa.ml:80'
basePath: /api
tags:
  - name: Spaces
    description: API for working with spaces
  - name: Folders
    description: API for working with folders
  - name: Files
    description: API for working with files
  - name: Definitions
    description: Defining entities that are present in queries
schemes:
  - http
paths:
  /folders:
    get:
      tags: []
      summary: Get all folders
      description: Allows you to obtain all available folders
      parameters: []
      responses:
        '200':
          description: Returns all available folders
          schema:
            type: array
            items:
              $ref: '#/definitions/FolderUnit'
    post:
      tags: 
        - Folders
      summary: Create folder
      description: Allows you to add new folder
      parameters:
        - in: body
          name: folder
          required: true
          schema:
            $ref: '#/definitions/FolderUnit'
      responses:
        '200':
          description: Folder was successfully created. Output parameter 'id' - identifier of created folder.
          schema:
            type: integer
            format: int32
  '/folders/{id}':
    get:
      tags:
        - Folders
      summary: Get folder by Id
      description: Allows you to obtain the folder with given ID
      parameters:
        - name: id
          in: path
          description: Unique identifier of the folder
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: Returns the folder object with given ID
          schema:
            $ref: '#/definitions/FolderUnit'
    put:
      tags:
        - Folders
      summary: Update folder by Id
      description: Allows you to update folder for giver Id
      parameters:
        - name: id
          in: path
          description: Unique identifier of the folder
          required: true
          type: integer
          format: int32
        - in: body
          name: folder
          required: true
          schema:
            $ref: '#/definitions/FolderUnit'
      responses:
        '200':
          description: The update was successful.
    delete:
      tags:
        - Folders
      summary: Delete folder
      description: Removes folder for given ID
      parameters:
        - name: id
          in: path
          description: Unique identifier of the folder
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: The removal was successful
  /spaces:
    get:
      tags:
        - Spaces
      summary: Get all spaces
      description: Allows you to obtain all available spaces
      parameters: []
      responses:
        '200':
          description: Returns all available spaces
          schema:
            type: array
            items:
              $ref: '#/definitions/Space'
        '404':
          description: Failed to find any space
    post:
      tags:
        - Spaces
      summary: Create new space
      description: Allows you to add new space
      parameters:
        - in: body
          name: space
          required: true
          schema:
            $ref: '#/definitions/Space'
      responses:
        '200':
          description: Space was successfully added
        '400':
          description: If  space-object is not valid
  '/spaces/{id}':
    get:
      tags:
        - Spaces
      summary: Get space by Id
      description: Allows you to obtain the space object with given ID
      parameters:
        - name: id
          in: path
          description: Unique identifier of the space
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: Returns the space object with given ID
          schema:
            $ref: '#/definitions/Space'
        '404':
          description: Space with the given id was not found.
    put:
      tags:
        - Spaces
      summary: Update space by Id
      description: Allows you to update space for a given Id
      parameters:
        - name: id
          in: path
          description: Unique identifier of the space
          required: true
          type: integer
          format: int32
        - in: body
          name: space
          required: true
          schema:
            $ref: '#/definitions/Space'
      responses:
        '200':
          description: The update was successful.
        '400':
          description: If  space-object is not valid
    delete:
      tags:
        - Spaces
      summary: Delete space
      description: Removes space for a given ID
      parameters:
        - name: id
          in: path
          description: Unique identifier of the space
          required: true
          type: string
      responses:
        '200':
          description: The removal was successful
        '404':
          description: Space with the given id was not found.
  /files: 
    get:
      tags: 
        - Files
      summary: Get all files
      description: Allows you to obtain all available files
      parameters: []
      responses:
        '200':
          description: Returns all available files
          schema:
            type: array
            items:
              $ref: '#/definitions/FileUnit'
    post:
      tags:
        - Files
      summary: Add new file
      description: Allows you to create a new file.
      parameters:
        - in: body
          name: file
          required: true
          schema:
            $ref: '#/definitions/FileUnit'
      responses:
        '200':
          description: File was successfully created
  '/files/{id}':    
    get:
      tags:
        - Files
      summary: Get file by Id
      description: Allows to obtain the file with given ID
      parameters:
        - name: id
          in: path
          description: Unique identifier of the file
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: Returns the file with given ID
          schema:
            $ref: '#/definitions/FileUnit'
    put:
      tags:
        - Files
      summary: Update file by Id
      description: Allows to update file with given Id
      parameters:
        - name: id
          in: path
          description: Unique identifier of the file
          required: true
          type: integer
          format: int32
        - in: body
          name: file
          required: true
          schema:
            $ref: '#/definitions/FileUnit'
      responses:
        '200':
          description: The update was successful.
    delete:
      tags:
        - Files
      summary: Delete file
      description: Removes file for a given ID
      parameters:
        - name: id
          in: path
          description: Unique identifier of the file
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: The removal was successful  
definitions:
  FileUnit:
    type: object
    properties:
      Id:
        type: integer
        format: int32
        description: Unique identifier of the space
      IsDeleted:
        type: boolean
        description: A flag that indicates whether the space is deleted
        default: false
      Name:
        type: string
        description: The name of the space
      Description:
        type: string
        description: Description of the space
      FileType:
        type: integer
        format: int32
        description: Type of the file
    description: FileUnit represents an object of file
  FolderUnit:
    type: object
    properties:
      Id:
        type: integer
        format: int32
        description: Unique identifier of the space  
      IsDeleted:
        type: boolean
        description: A flag that indicates whether the space is deleted
        default: false        
      Name:
        type: string
        description: The name of the space
      Description:
        type: string
        description: Description of the space
    description: FolderUnit represents an object of folder
  Space:
    type: object
    properties:
      Id:
        type: integer
        format: int32
        description: Unique identifier of the space
      IsDeleted:
        type: boolean
        description: A flag that indicates whether the space is deleted
        default: false    
      Name:
        type: string
        description: The name of the space
      Description:
        type: string
        description: Description of the space        
      MaxFileSize:
        type: integer
        format: int32
        description: Maximum size of a file in the space
      MaxFilesQuantity:
        type: integer
        format: int32
        description: Maximum number of files in the space
      ReadPermittedUsers:
        type: array
        description: The list of users who have permission to read
        items:
          $ref: '#/definitions/User'
      Folders:
        type: array
        description: A list of folders that are in a given space
        items:
          $ref: '#/definitions/FolderUnit'
      Files:
        type: array
        description: A list of files that are in a given space
        items:
          $ref: '#/definitions/FileUnit'
    description: Space object
  User:
    type: object
    properties:
      Email:
        type: string
        description: Email of the user
      GlobalId:
        type: string
        description: The token received from the third party authorization service
      Id:
        type: integer
        format: int32
        description: Unique identifier of the user
      IsDeleted:
        type: boolean
        description: A flag that indicates whether the user is deleted
        default: false
      Login:
        type: string
        description: User login
      Password:
        type: string
        description: User password
    description: This object representing a user of the system
